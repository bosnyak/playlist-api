createPlaylist:
  handler: src/handlers/index.createPlaylistHandler
  events:
    - http:
        path: /playlists
        method: post
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
      Resource: arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:provider.environment.PLAYLIST_TABLE_NAME}
getAllPlaylists:
  handler: src/handlers/index.getAllPlaylistsHandler
  events:
    - http:
        path: /playlists
        method: get
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
      Resource: arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:provider.environment.PLAYLIST_TABLE_NAME}
getPlaylistById:
  handler: src/handlers/index.getPlaylistByIdHandler
  events:
    - http:
        path: /playlists/{id}
        method: get
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
      Resource: arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:provider.environment.PLAYLIST_TABLE_NAME}
deletePlaylistById:
  handler: src/handlers/index.deletePlaylistByIdHandler
  events:
    - http:
        path: /playlists/{id}
        method: delete
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:DeleteItem
      Resource: arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:provider.environment.PLAYLIST_TABLE_NAME}
updatePlaylistById:
  handler: src/handlers/index.updatePlaylistByIdHandler
  events:
    - http:
        path: /playlists/{id}
        method: put
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:provider.environment.PLAYLIST_TABLE_NAME}
